===========
basic group
===========
if: (success())
---
(source
  (expression
    (logical_group
      (function_call
        function: (identifier)))))

=======================
basic group (delimited)
=======================
if: ${{ (success()) }}
---
(source
  (delimited_expression
    (logical_group
      (function_call
        function: (identifier)))))

==============
error if empty
:error
==============
if: ()
---

==============
with operators
==============
if: inputs.mode && inputs.execute && (success() || needs.dry-run.result == 'skipped')
---
(source
  (expression
    (context
      (identifier)
      (property
        (property_deref)
        (identifier)))
    (operator
      (and))
    (context
      (identifier)
      (property
        (property_deref)
        (identifier)))
    (operator
      (and))
    (logical_group
      (function_call
        function: (identifier))
      (operator
        (or))
      (context
        (identifier)
        (property
          (property_deref)
          (identifier))
        (property
          (property_deref)
          (identifier)))
      (operator
        (eq))
      (string
        (string_content)))))

=================
with not operator
=================
if: github.event_name != 'pull_request' && (! startsWith(github.ref, 'refs/tags/') || ! startsWith(github.ref, 'refs/heads/'))
---
(source
  (expression
    (context
        (identifier)
        (property
          (property_deref)
          (identifier)))
    (operator
      (ne))
    (string
      (string_content))
    (operator
      (and))
    (logical_group
      (not)
      (function_call
        function: (identifier)
        arguments: (arguments
          (context
            (identifier)
            (property
              (property_deref)
              (identifier)))
          (string
            (string_content))))
      (operator
        (or))
      (not)
      (function_call
        function: (identifier)
        arguments: (arguments
          (context
            (identifier)
            (property
              (property_deref)
              (identifier)))
          (string
            (string_content)))))))
