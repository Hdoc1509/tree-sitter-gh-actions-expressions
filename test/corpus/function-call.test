===========
simple call
===========
if: myFunction()
---
(source
  (expression
    (function_call
      function: (identifier))))

=======================
simple call (delimited)
=======================
if: ${{ myFunction() }}
---
(source
  (delimited_expression
    (function_call
      function: (identifier))))

===========================
single context as parameter
===========================
if: toJSON(job)
---
(source
  (expression
    (function_call
      function: (identifier)
      arguments: (arguments
        (context
          (identifier))))))

====================
literal as parameter
====================
if: fromJSON('{"key":"value"}')
---
(source
  (expression
    (function_call
      function: (identifier)
      arguments: (arguments
        (literal
          (string
            (string_content)))))))

===================
multiple parameters
===================
if: contains(github.event.issue.labels.*.name, 'bug')
---
(source
  (expression
    (function_call
      function: (identifier)
      arguments: (arguments
        (context
          (identifier)
          (property
            (property_deref)
            (identifier))
          (property
            (property_deref)
            (identifier))
          (property
            (property_deref)
            (identifier))
          (property
            (property_deref)
            (asterisk))
          (property
            (property_deref)
            (identifier)))
        (literal
          (string
            (string_content)))))))

===============
format() string
===============
if: format('{{Hello {0} {1} {2}!}}', 'Mona', 'the', 'Octocat')
---
(source
  (expression
    (function_call
      function: (identifier)
      arguments: (arguments
        (format_string
          (scape_sequence)
          (string_content)
          (format_variable
            (format_index))
          (format_variable
            (format_index))
          (format_variable
            (format_index))
          (string_content)
          (scape_sequence))
        (literal
          (string
            (string_content)))
        (literal
          (string
            (string_content)))
        (literal
          (string
            (string_content)))))))
